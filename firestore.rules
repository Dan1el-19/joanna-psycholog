rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is admin
    function isAdmin() {
      // In production, you should implement proper Firebase Auth
      // For now, we rely on frontend authentication
      return true; // Temporary - implement proper auth later
    }

    // KOLEKCJA "mail" - Zawsze zablokowana dla klienta
    match /mail/{emailId} {
      // Only Cloud Functions can write emails
      allow read, write: if false;
    }

    // KOLEKCJA "appointments"
    match /appointments/{appointmentId} {
      // Anyone can create appointments (public form)
      allow create: if true;
      
      // Allow reading appointments for admin panel
      // TODO: Implement proper Firebase Auth in production
      allow read, list: if true;
      
      // Allow updating appointments for admin operations
      // TODO: Implement proper Firebase Auth in production  
      allow update: if true;

      // No deletion allowed
      allow delete: if false;
    }

    // KOLEKCJA "adminUsers" - do przyszłych ulepszeń
    match /adminUsers/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // KOLEKCJA "scheduleTemplates" - szablony grafików
    match /scheduleTemplates/{templateId} {
      // Admin can read/write templates
      allow read, write: if true; // TODO: Implement proper Firebase Auth
    }

    // KOLEKCJA "templateAssignments" - przypisania szablonów do miesięcy
    match /templateAssignments/{assignmentId} {
      // Admin can read/write template assignments
      allow read, write: if true; // TODO: Implement proper Firebase Auth
    }

    // KOLEKCJA "monthlySchedules" - grafiki miesięczne
    match /monthlySchedules/{scheduleId} {
      // Admin can read/write schedules, clients can read for availability
      allow read: if true;
      allow write: if true; // TODO: Implement proper Firebase Auth for write
    }

    // KOLEKCJA "blockedSlots" - zablokowane terminy
    match /blockedSlots/{blockId} {
      // Admin can read/write, clients can read for availability
      allow read: if true;
      allow write: if true; // TODO: Implement proper Firebase Auth for write
    }

    // KOLEKCJA "reservationTokens" - tokeny zarządzania rezerwacją
    match /reservationTokens/{tokenId} {
      // Only Cloud Functions can write, anyone can read for validation
      allow read: if true;
      allow write: if false;
    }

    // KOLEKCJA "temporaryBlocks" - tymczasowe blokady terminów
    match /temporaryBlocks/{blockId} {
      // Anyone can create/read/update/delete temporary blocks for reservations
      allow read, write: if true;
    }

    // KOLEKCJA "feedback" - opinie klientów
    match /feedback/{feedbackId} {
      // Anyone can create feedback, admin can read/update
      allow create: if true;
      allow read, update: if true; // TODO: Implement proper Firebase Auth
    }
  }
}